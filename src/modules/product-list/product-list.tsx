/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import * as React from 'react';

import { IProductListData } from './product-list.data';
import { IProductListProps } from './product-list.props.autogenerated';
import { getDimensionValuesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
import { AsyncResult } from '@msdyn365-commerce/core';
import { ProductDimension, ProductDimensionValue } from '@msdyn365-commerce/retail-proxy';
/**
 *
 * ProductList component
 * @extends {React.PureComponent<IProductListProps<IProductListData>>}
 */
export default class ProductList extends React.PureComponent<IProductListProps<IProductListData>> {
    componentDidMount() {
        console.log(this.props.data.products)
    }

    _getData = async () => {
        const { context } = this.props;
        const recordId = +"68719490634";
        const channelId = context.actionContext.requestContext.apiSettings.channelId;
        const callerContext = context.actionContext;
        const matchingDimensionValues: ProductDimension[] = [];
        const dimensionTypeValue: number = 1;
        return await getDimensionValuesAsync({ callerContext, queryResultSettings: {} }, recordId, channelId, dimensionTypeValue, matchingDimensionValues,
            // @ts-ignore: KitVariantResolution context should be nullable
            null);
    }
    
    onImageClick = () => {
        console.log('yesssss');
        return async (event: React.MouseEvent) => {
            try {
                let result: AsyncResult<ProductDimensionValue[]> = await this._getData();
                console.log(result);
            } catch (error) {
            }
        }
    }

    public render(): JSX.Element {
        const { config, resources } = this.props;

        return (
            <div style={wrapperDiv} className='col-md-4'>
                <div style={mainDiv} className="col-md-11">
                    <img onClick={this.onImageClick} style={imageStyle} src={config.imageUrl} />
                    <h3 style={headingStyle}>{config.heading}</h3>
                    <p style={paraStyle}>{config.description}</p>
                </div>
            </div>
        );
    }
}


const wrapperDiv: React.CSSProperties = {
    height: '600px',
    textAlign: 'center'
}

const mainDiv: React.CSSProperties = {
    height: '100%',
    marginLeft: '4.15%',
    background: 'white'
}

const imageStyle: React.CSSProperties = {
    height: '70%',
    width: '100%'
}

const headingStyle: React.CSSProperties = {
    marginTop: '30px',
    fontSize: '25px'
}

const paraStyle: React.CSSProperties = {
    marginTop: '30px',
    fontSize: '16px',
    textAlign: 'justify',
    color: "#aaa", 
    paddingLeft: '30px',
    paddingRight: '30px'
}

